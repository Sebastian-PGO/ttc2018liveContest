FROM ftsrg/ttc2018:common

# dependencies (separated to share layers with other images)
RUN apt-get update && \
    apt-get install -yq --no-install-recommends openjdk-11-jdk-headless \
    && update-java-alternatives --set java-1.11.0-openjdk-amd64 \
    && rm -rf /var/lib/apt/lists/*
# pre-download Gradle wrapper (all tools use the same version)
ENV GRADLE_WRAPPER_TOOL_PATH=solutions/EMFSolutionXtend/
COPY $GRADLE_WRAPPER_TOOL_PATH/gradle/wrapper $GRADLE_WRAPPER_TOOL_PATH/gradle/wrapper
COPY $GRADLE_WRAPPER_TOOL_PATH/gradlew $GRADLE_WRAPPER_TOOL_PATH/gradlew
RUN $GRADLE_WRAPPER_TOOL_PATH/gradlew --version

# install Neo4j
ENV NEO4J_NAME=neo4j-community-3.5.20
ENV NEO4J_HOME=/opt/$NEO4J_NAME
WORKDIR /opt
RUN wget -qO- "https://neo4j.com/artifact.php?name=${NEO4J_NAME}-unix.tar.gz" | tar -xzv

WORKDIR /ttc

# small and stable files
COPY expected-results expected-results
COPY reporting reporting
COPY scripts scripts
COPY output output

# most frequently changing folders
COPY solutions/Neo4jSolution solutions/Neo4jSolution
COPY solutions/Neo4jSolutionBatch solutions/Neo4jSolutionBatch
COPY solutions/Neo4jSolutionBatch_algo_with_filtered_edges solutions/Neo4jSolutionBatch_algo_with_filtered_edges
COPY solutions/Neo4jSolutionBatch_rebuild_overlay solutions/Neo4jSolutionBatch_rebuild_overlay
COPY solutions/Neo4jSolution_explicit_component solutions/Neo4jSolution_explicit_component
COPY solutions/Neo4jSolution_explicit_component_algo solutions/Neo4jSolution_explicit_component_algo
COPY solutions/Neo4jSolution_overlay_graph solutions/Neo4jSolution_overlay_graph
COPY config/config-docker-neo4j.json config/config.json

# build solutions in config.json
RUN scripts/run.py -b

COPY docker/entrypoint-neo4j.sh entrypoint.sh
CMD ./entrypoint.sh

ENV JAVA_HEAP_SIZE=6G

# save build information
ARG README_TXT_ARG=""
ENV README_TXT=$README_TXT_ARG
RUN date -Is > README.md
RUN echo "$README_TXT" >> README.md
